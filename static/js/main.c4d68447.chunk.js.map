{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","id","aboutText","placeholder","class","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c4d68447.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li>\r\n        \r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class= {`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'about text here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log('Upper case was clicked' + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to upper case\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log('Upper case was clicked' + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lower case\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text area cleared\",\"success\");\r\n    }\r\n    const handleToCopy = ()=>{\r\n        var newText = document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        props.showAlert(\"Text copied\",\"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText (newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces are removed\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log('on change');\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    //text = 'new text'; wrong way to change the state\r\n    //setText('new text');//correct way to change the state\r\n\r\n    return (\r\n        <>\r\n        <div className='container' style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text}  onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white',color: props.mode === 'dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>clear text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleToCopy}>copy</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h2>your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter  the something in the textBox above to preview it\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() =>{\n        setAlert(null);\n      }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode (\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode ('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"Success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n<Navbar title='Texttutils' aboutText='aboutus' mode={mode} toggleMode={toggleMode}/>\n{/* <Navbar/> */}\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading='Enter the text here' mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n</div>\n{/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}